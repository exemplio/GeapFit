// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'device_config.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

DeviceConfig _$DeviceConfigFromJson(Map<String, dynamic> json) => DeviceConfig(
      id: json['id'] as String?,
      businessName: json['business_name'] as String?,
      businessEmail: json['business_email'] as String?,
      businessIdDoc: json['business_id_doc'] as String?,
      businessPhone: json['business_phone'] as String?,
      identifier: json['identifier'] as String?,
      name: json['name'] as String?,
      serial: json['serial'] as String?,
      imei: json['imei'] as String?,
      brand: json['brand'] as String?,
      model: json['model'] as String?,
      version: json['version'] as String?,
      commerceId: json['commerce_id'] as String?,
      commerceName: json['commerce_name'] as String?,
      commerceEmail: json['commerce_email'] as String?,
      commerceIdDoc: json['commerce_id_doc'] as String?,
      appVersion: json['app_version'] as String?,
      commercePassword: json['commerce_password'] as String?,
      keysPassword: json['keys_password'] as String?,
      connectionType: json['connection_type'] as String?,
      phonePrefix: json['phone_prefix'] as String?,
      dialType: json['dial_type'] as String?,
      callType: json['call_type'] as String?,
      hostname: json['hostname'] as String?,
      tpdu: json['tpdu'] as String?,
      tpduReload: json['tpdu_reload'] as String?,
      serverName: json['server_name'] as String?,
      serverIp: json['server_ip'] as String?,
      serverPort: json['server_port'] as int?,
      tmsIp: json['tms_ip'] as String?,
      tmsPort: json['tms_port'] as int?,
      functionalityIncluded: json['functionality_included'] as bool?,
      connectionRetries: json['connection_retries'] as int?,
      offlineCashAdvancementEnable:
          json['offline_cash_advancement_enable'] as bool?,
      closureEnable: json['closure_enable'] as bool?,
      closureRequest: json['closure_request'] as bool?,
      lotClosureDays: json['lot_closure_days'] as int?,
      rechargeEnable: json['recharge_enable'] as bool?,
      extraFinancingEnable: json['extra_financing_enable'] as bool?,
      timeout: json['timeout'] as int?,
      extraFinancingLiteral: json['extra_financing_literal'] as String?,
      requestAnnulationPassword: json['request_annulation_password'] as bool?,
      requestReturnPassword: json['request_return_password'] as bool?,
      requestCashAdvancementPassword:
          json['request_cash_advancement_password'] as bool?,
      requestReportPassword: json['request_report_password'] as bool?,
      requestInstallerPassword: json['request_installer_password'] as bool?,
      requestOperatorPassword: json['request_operator_password'] as bool?,
      requestSyncPassword: json['request_sync_password'] as bool?,
      requestLoadKeysPassword: json['request_load_keys_password'] as bool?,
      annulationPassword: json['annulation_password'] as String?,
      returnPassword: json['return_password'] as String?,
      cashAdvancementPassword: json['cash_advancement_password'] as String?,
      reportPassword: json['report_password'] as String?,
      installerPassword: json['installer_password'] as String?,
      operatorPassword: json['operator_password'] as String?,
      syncPassword: json['sync_password'] as String?,
      loadKeysPassword: json['load_keys_password'] as String?,
      printReceiptEnable: json['print_receipt_enable'] as bool?,
      displayReceiptEnable: json['display_receipt_enable'] as bool?,
      sessionEnable: json['session_enable'] as bool?,
      inactivityTime: json['inactivity_time'] as int?,
      affiliationType: json['affiliation_type'] as String?,
      dataEntry: json['data_entry'] as String?,
      coin: json['coin'] as String?,
      percentageTip: json['percentage_tip'] as int?,
      readingTypes: (json['reading_types'] as List<dynamic>?)
          ?.map((e) => e as String)
          .toList(),
      sendOnlyDefaultConnection: json['send_only_default_connection'] as bool?,
      forcedCloseTime: json['forced_close_time'] as int?,
      forcedCloseTimeUnit: json['forced_close_time_unit'] as String?,
    );

Map<String, dynamic> _$DeviceConfigToJson(DeviceConfig instance) =>
    <String, dynamic>{
      'id': instance.id,
      'business_name': instance.businessName,
      'business_email': instance.businessEmail,
      'business_id_doc': instance.businessIdDoc,
      'business_phone': instance.businessPhone,
      'identifier': instance.identifier,
      'name': instance.name,
      'serial': instance.serial,
      'imei': instance.imei,
      'brand': instance.brand,
      'model': instance.model,
      'version': instance.version,
      'commerce_id': instance.commerceId,
      'commerce_name': instance.commerceName,
      'commerce_email': instance.commerceEmail,
      'commerce_id_doc': instance.commerceIdDoc,
      'app_version': instance.appVersion,
      'commerce_password': instance.commercePassword,
      'keys_password': instance.keysPassword,
      'connection_type': instance.connectionType,
      'phone_prefix': instance.phonePrefix,
      'dial_type': instance.dialType,
      'call_type': instance.callType,
      'hostname': instance.hostname,
      'tpdu': instance.tpdu,
      'tpdu_reload': instance.tpduReload,
      'server_name': instance.serverName,
      'server_ip': instance.serverIp,
      'server_port': instance.serverPort,
      'tms_ip': instance.tmsIp,
      'tms_port': instance.tmsPort,
      'functionality_included': instance.functionalityIncluded,
      'connection_retries': instance.connectionRetries,
      'offline_cash_advancement_enable': instance.offlineCashAdvancementEnable,
      'closure_enable': instance.closureEnable,
      'closure_request': instance.closureRequest,
      'lot_closure_days': instance.lotClosureDays,
      'recharge_enable': instance.rechargeEnable,
      'extra_financing_enable': instance.extraFinancingEnable,
      'timeout': instance.timeout,
      'extra_financing_literal': instance.extraFinancingLiteral,
      'request_annulation_password': instance.requestAnnulationPassword,
      'request_return_password': instance.requestReturnPassword,
      'request_cash_advancement_password':
          instance.requestCashAdvancementPassword,
      'request_report_password': instance.requestReportPassword,
      'request_installer_password': instance.requestInstallerPassword,
      'request_operator_password': instance.requestOperatorPassword,
      'request_sync_password': instance.requestSyncPassword,
      'request_load_keys_password': instance.requestLoadKeysPassword,
      'annulation_password': instance.annulationPassword,
      'return_password': instance.returnPassword,
      'cash_advancement_password': instance.cashAdvancementPassword,
      'report_password': instance.reportPassword,
      'installer_password': instance.installerPassword,
      'operator_password': instance.operatorPassword,
      'sync_password': instance.syncPassword,
      'load_keys_password': instance.loadKeysPassword,
      'print_receipt_enable': instance.printReceiptEnable,
      'display_receipt_enable': instance.displayReceiptEnable,
      'session_enable': instance.sessionEnable,
      'inactivity_time': instance.inactivityTime,
      'affiliation_type': instance.affiliationType,
      'data_entry': instance.dataEntry,
      'coin': instance.coin,
      'percentage_tip': instance.percentageTip,
      'reading_types': instance.readingTypes,
      'send_only_default_connection': instance.sendOnlyDefaultConnection,
      'forced_close_time': instance.forcedCloseTime,
      'forced_close_time_unit': instance.forcedCloseTimeUnit,
    };
